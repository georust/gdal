#[cfg(test)]
mod tests {
    use crate::assert_near;
    use crate::errors::Result;
    use crate::raster::processing::dem::{DemCommonOptions, DemProcessing};
    use crate::raster::StatisticsAll;
    use crate::test_utils::{fixture, target};
    use crate::Dataset;

    #[test]
    fn roughness() -> Result<()> {
        let opts = DemCommonOptions::new();

        let ds = Dataset::open(fixture("dem-hills.tiff"))?;

        let roughness = ds.roughness(target("dem-hills-roughness.tiff"), &opts)?;

        let stats = roughness
            .rasterband(1)?
            .get_statistics(true, false)?
            .unwrap();

        // These numbers were generated by extracting the output from:
        //    gdaldem roughness fixtures/dem-hills.tiff target/dest.tiff
        //    gdalinfo -stats target/dest.tiff
        let expected = StatisticsAll {
            min: 0.0,
            max: 14.36100769043,
            mean: 1.5128357817365,
            std_dev: 2.0120679959608,
        };

        assert_near!(StatisticsAll, stats, expected, epsilon = 1e-10);
        Ok(())
    }
}
